Question : Given a 32 bit unsigned integer num and an integer i. Perform following operations on the number - 

1. Get ith bit

2. Set ith bit

3. Clear ith bit

Note : For better understanding, we are starting bits from 1 instead 0. (1-based)



CODE : 


  void bitManipulation(int num, int i) {
        int c = (num & (1 << (i - 1)));
        
        // Get ith bit : checking that the bit at position i is 0 or 1
        if(c)
            cout << 1 << " ";
        else
            cout << 0 << " ";
            
        // Set ith BIt : Changing the ith bit to 1 (by performing an operation)
        int s = (num | (1 << (i-1)));
        cout << s << " ";
        
        //Cleaning the given bit means that if i-th bit is 1, then clear it to 0 and 
        //if it is 0 then leave it unchanged.
        //(~ changes 1 to 0 / 0 to 1)
        int g = (num & (~(1<<(i-1))));
        cout << g << " ";
    }
